name: Brave Windows cross-build (Linux runner)

on:
  workflow_dispatch:

jobs:
  build-win:
    runs-on: [self-hosted, linux, ubuntu-24.04]

    # Keep env simple hereâ€”no expressions
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 1
      DEPOT_TOOLS_WIN_TOOLCHAIN_BASE_URL: ${{ secrets.WIN_TOOLCHAIN_BASE_URL }}
      # We'll re-export the exact GYP_MSVS_HASH_* name later
      WIN_TOOLCHAIN_HASH: ${{ secrets.WIN_TOOLCHAIN_HASH }}
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      SCCACHE_DIR: ${{ github.workspace }}/.sccache

    steps:
      - name: Prep packages
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 python3-venv ninja-build curl xz-utils \
              pkg-config build-essential lld clang cmake ccache

      - name: Checkout Brave (brave-core)
        uses: actions/checkout@v4
        with:
          repository: brave/brave-core
          path: brave
          fetch-depth: 0

      - name: Fetch depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          # add depot_tools to PATH properly
          echo "$PWD/depot_tools" >> "$GITHUB_PATH"

      # Re-export the exact hash var name that Chromium expects
      # Example: GYP_MSVS_HASH_17_8_34241_0
      - name: Export GYP_MSVS_HASH_* env var
        run: |
          echo "GYP_MSVS_HASH_17_8_34241_0=${WIN_TOOLCHAIN_HASH}" >> "$GITHUB_ENV"

      - name: Configure gclient for Windows target
        working-directory: brave
        run: |
          cat > .gclient << 'EOF'
          solutions = [
            {
              "name": "src",
              "url": "https://chromium.googlesource.com/chromium/src.git",
              "deps_file": "DEPS",
              "managed": False,
              "custom_deps": {},
              "custom_vars": {},
            },
          ]
          target_os = [ "win" ]
          EOF

      - name: Sync Chromium/Brave deps
        working-directory: brave
        run: |
          gclient sync --nohooks --with_branch_heads --with_tags -j"$(nproc)"
          gclient runhooks

      - name: GN args
        working-directory: brave/src
        run: |
          mkdir -p out/win
          cat > out/win/args.gn << 'EOF'
          target_os = "win"
          target_cpu = "x64"
          is_debug = false
          is_component_build = false
          use_lld = true
          symbol_level = 1
          EOF

      - name: Generate Ninja files
        working-directory: brave/src
        run: gn gen out/win

      - name: Build Brave
        working-directory: brave/src
        run: autoninja -C out/win brave

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: brave-windows-unsigned
          path: brave/src/out/win/*
          if-no-files-found: warn
